
###################
# Basic ECJ Setup #
###################

# This specifies the major pieces of an ECJ simulation, starting with the
# EvolutionState.
#
# Use the standard ECJ EvolutionState, Population, Initializer, and Finisher.
# The exchanger is not currently used.
#
state		= ec.simple.SimpleEvolutionState
pop			= ec.Population
init		= ec.simple.SimpleInitializer
finish		= ec.simple.SimpleFinisher
exch		= ec.simple.SimpleExchanger  


# This is the ECJ checkpointing system.  This is currently broken because
# some of the objects used by Agency are not serializable.  This should
# eventually be fixed.
checkpoint		= false
prefix			= ecjCheckpoint.gen
checkpoint-modulo	= 100

# Basic config; don't keep on running forever; only run the generations
# specified in the configuration file.
quit-on-run-complete	= true



##################
# Agency Breeder #
##################

# Specify that the Agency-specific breeder should be used
breed		= ec.agency.AgencyBreeder

# When doing the breeding to determine subpopulation sizes, use
# tournament selection with this size
breed.tournamentSize = 2

# When using the ECJ selection within populations, use tournaments
# of this many individuals.
select.tournament.size = 2

# Heavily weigh the existing population size (90% influence)  This prevents
# very quick changes in subpopulation composition.
breed.changeWeight = 0.1


####################
# Agency Evaluator #
####################

# Specify that the agency evaluator should be used.
eval		= ec.agency.eval.AgencyEvaluator

# Aggregate fitness as the simple mean.
eval.fitnessaggregator = ec.agency.eval.ArithmaticMeanFitnessAggregator

# When running the simulations, do so in parallel
eval.runner = ec.agency.eval.ThreadPoolRunner




# Data output configuration

# Output basic summary stats to the console during runs
stat		= ec.agency.stats.SummaryStatsFitness
stat.num-children = 2
# Write the entire genomes to files
stat.child.0 = ec.agency.stats.GenomeDump
# Write summary data on sub-population sizes to file
stat.child.1 = ec.agency.stats.PopulationSizes
